/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { gsap } from "gsap/gsap-core"

export default function Base(props) {
  const { nodes, materials } = useGLTF("/jukebox-bone.glb");
  const yellowLights = useRef()
  const redLights = useRef()

    useEffect(() => {
        if (props.isActive) {
            gsap.to(yellowLights.current.material, { emissiveIntensity: 1.5 })
            gsap.to(redLights.current.material, { emissiveIntensity: 1.5 })
        } else {
            gsap.to(yellowLights.current.material, { emissiveIntensity: 0.4 })
            gsap.to(redLights.current.material, { emissiveIntensity: 0.4 })
        }
    }, [ props.isActive ])

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.JukeboxBase.geometry}
        material={materials.WoodCaseMat}
      >
        <mesh
          castShadow={ false }
          receiveShadow={ false }
          geometry={nodes.Glass.geometry}
          material={materials.GlassMat}
        />
        <mesh
          castShadow={ false }
          receiveShadow={ false }
          geometry={nodes.GoldPlate.geometry}
          material={materials.GoldPlateMat}
        />
        <mesh
          castShadow={ false }
          receiveShadow={ false }
          geometry={nodes.Metal.geometry}
        >
            <meshStandardMaterial
                roughness={ 0.5 }
                metalness={ 1.0 }
                color={ '#DADADA' }
            />
        </mesh>
        <mesh
          castShadow={ false }
          receiveShadow={ false }
          geometry={nodes.RedLights.geometry}
          ref={ redLights }
        >
            <meshStandardMaterial
                emissive={ '#ff0000' }
                emissiveIntensity={ 0.4 }
                toneMapped={ false }
            />
        </mesh>
        <mesh
          castShadow={ false }
          receiveShadow={ false }
          geometry={nodes.YellowLights.geometry}
          ref={ yellowLights }
        > 
            <meshStandardMaterial 
                emissive={ '#fdde73' }
                emissiveIntensity={ 0.4 }
                toneMapped={ false }
            />
        </mesh>
      </mesh>
    </group>
  );
}

useGLTF.preload("/jukebox-bone.glb");